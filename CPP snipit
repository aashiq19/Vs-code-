{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"boilerplate cpp": {
		"prefix": "c",
		"body": [
			"#include<bits/stdc++.h>",
			// "#include<iostream>",
			// "#include<math.h>",
			// "#include<climits>",
			// "#include<algorithm>",
			"using namespace std;\n\n",	
			"int main()",
			"{",
			// "{\n",
			"\t$1",
			// "\t$1\n",
			"\treturn 0;",
			"}"
		],
		"description": "boiler plate code"
	}
	"test case cpp": {
		"prefix": "t",
		"body": [
			"#include<bits/stdc++.h>",
			// "#include<iostream>",
			// "#include<math.h>",
			// "#include<climits>",
			// "#include<algorithm>",
			"using namespace std;\n\n",	
			"int main()",
			"{",
			"\tint t;",
    		"\tcin >> t;",
    		"\twhile (t--){",
			"\t\t$1",
			// "\t$1",
    		"\t}",
    		"\treturn 0;"
			"}"

		],
		"description": "boiler plate code with test case"
	}
	"Q case cpp": {
		"prefix": "q_cs",
		"body": [
			"int q;",
			"cin>>q;",
			"while(q--){",
			"\t$1",
			"}"

		],
		"description": "boiler plate code with Q case"
	}
	"T x Q nested test cases": {
		"prefix": "tt",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;\n",
			"int main(){",
			"\tint t;",
			"\tcin >> t;",
			"\twhile (t--)",
			"\t{",
			"\t\tint q;",
			"\t\tcin >> q;",
			"\t\twhile (q--)",
			"\t\t{",
			"\t\t\t$1",
			"\t\t}",
			"\t}",
			"\treturn 0;",
			"}",
		],
		"description": "boiler plate code with Q case"
	}
}
